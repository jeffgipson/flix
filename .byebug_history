c
current_user.top_movies
c
current_user.top_movies
current_user.save
current_user.top_movies << "1"
current_user.top_movies=[]
current_user.top_movies
c
current_user.top_movies
current_uesr.top_movies.to_a
current_user.top_movies << "1"
current_user.top_movies
c
current_user.top_movies
current_users.top_moveis
c
current_user.top_movies
c
current_user.top_movies
c
current_user.top_movies
c
current_user.top_movies
c
current_user.top_movies
c
JSON.parse current_user.top_movies
current_user.top_movies
c
current_user.top_movies
c
current_user.top_movies
exception
n
c
current_user.top_movies << "1"
current_user.top_movies
current_user
params
c
user
c
params[:user]
params
user_params
params
c
params
c
params
c
params
c
cc
c
\c
c
byebug
c
n
c
@query 
n
c
n
@query
n
c
[params[:keyword]].present?
params[:keyword].present?
n
params
c
review_params
c
params
c
params["review"]
params
params.require(:review).permit
c
params
c
@genre["genres"].select { |x| x["id"] == genre_item }[0]["name"]
g[0]["name"]
g["name"]
g = @genre["genres"].select { |x| x["id"] == genre_item }
(@genre["genres"].select { |x| x["id"] == genre_item })["name"]
@genre["genres"].select { |x| x["id"] == genre_item }["name"]
@genre["genres"].select { |x| x["id"] == genre_item }.compact
@genre["genres"].select { |x| x["id"] == genre_item }
@genre["genres"]
@genre.first
@genre
genre_ids
c
JSON.parse(@genre)
@genre=HTTP.get(genre_api_url).body
HTTP.get(genre_api_url).body
c
cc
c
d
c
@genre
@genres
